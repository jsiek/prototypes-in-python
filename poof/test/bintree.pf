union Tree {
  empty;
  node(int, Tree, Tree);
}

function height(Tree) -> int {
  height(empty) = 0;
  height(node(n,L,R)) = 1 + max(height(L), height(R));
}

function sum(Tree) -> int {
  sum(empty) = 0;
  sum(node(n,L,R)) = n + sum(L) + sum(R);
}

/*
     t3= 4
       /   \
  t1= 3     7 =t2
     
*/

define t1 is node(3, empty, empty)
define t2 is node(7, empty, empty)
define t3 is node(4, t1, t2)

theorem thm1: height(t3) = 2
proof
  reflexive
end

theorem thm2: sum(t3) = 14
proof
  reflexive
end
